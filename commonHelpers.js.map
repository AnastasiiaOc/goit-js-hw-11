{"version":3,"file":"commonHelpers.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["export default getImage;\n\nfunction getImage(image) {\n    const API_KEY = '44666739-d0cf1ddb18f9d30146fa54081';\n    const BASE_URL = 'https://pixabay.com/api/';\n    const searchParams = new URLSearchParams({\n    key: API_KEY,\n    q: image,\n    image_type: \"photo\",\n    orientation: \"horizontal\",\n    safesearch: \"true\",\n    });\n    console.log(searchParams.toString());\n    return fetch(`${BASE_URL}?${searchParams}`)\n        .then((resp) => {\n        if (!resp.ok) {\n            throw new Error(resp.statusText);\n            }\n            return resp.json();\n        })\n    \n}\n\n\n\n","import getImage from \"./pixabay-api\";\n\nexport default createMarcupGallery;\n\nfunction createMarcupGallery(images) {\n  return images.map((element) => \n        `<li class=\"gallery-item\">\n          <div class=\"gallery-image-tumb\">\n            <a class=\"gallery-link\" href=\"${element.largeImageURL}\">\n                <img class=\"gallery-image\" src=\"${element.webformatURL}\" alt=\"${element.tags}\" />\n            </a>\n          </div>\n            <ul class=\"image-info\">\n              <li class=\"image-info-item\">\n                <h4 class=\"image-info-item-title\">Likes</h4>\n                <p class=\"image-info-item-text\">${element.likes}</p>\n              </li>\n              <li class=\"image-info-item\">\n                <h4 class=\"image-info-item-title\">Views</h4>\n                <p class=\"image-info-item-text\">${element.views}</p>\n              </li>\n              <li class=\"image-info-item\">\n                <h4 class=\"image-info-item-title\">Comments</h4>\n                <p class=\"image-info-item-text\">${element.comments}</p>\n              </li>\n              <li class=\"image-info-item\">\n                <h4 class=\"image-info-item-title\">Downloads</h4>\n                <p class=\"image-info-item-text\">${element.downloads}</p>\n              </li>\n            </ul>\n        </li>`).join('');\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n// import searchImages from './js/pixabay-api';\nimport createMarcupGallery from './js/render-functions';\nimport getImage from './js/pixabay-api';\n\n\nconst form = document.querySelector('.form');\nconst gallery = document.querySelector('.gallery');\nconst loader = document.querySelector('.loader');\n\nfunction showLoader() {\n loader.classList.remove('hidden');\n}\nfunction hideLoader() {\n  loader.classList.add('hidden');\n}\nconst lightbox = new SimpleLightbox('.gallery a',\n    {\n        captionsData: 'alt',\n        captionDelay: 250,\n    });\n\nfunction showMessageError() {\n    iziToast.error({\n        message: \"Sorry, there are no images matching your search query. Please try again!\",\n        maxWidth: '432px',\n        position: 'topRight',\n        messageSize: 16,\n        backgroundColor: '#ef4040',\n        titleColor: '#FFFFFF',\n        messageColor: '#FFFFFF',\n        theme: 'dark',\n    }); \n}\n\nfunction showGallery(searchQuery) {\n    if (searchQuery) {\n       showLoader()\n       form.reset();\n       gallery.innerHTML = '';\n    //    searchImages(searchQuery)\n        getImage(searchQuery)\n            .then(data => {\n                const arrayImages = data.hits;\n                if (arrayImages.length) {\n                    gallery.innerHTML = createMarcupGallery(arrayImages);\n                    lightbox.refresh();\n                } else {\n                    showMessageError();\n                }\n            })\n            .catch((error) => console.log(error))\n            // .catch((error) => showMessageError(error))\n           .finally(() => hideLoader());  \n    } \n}\n\nform.addEventListener('submit', event => {\n    event.preventDefault();\n    const searchQuery = event.target.elements.search.value;\n    showGallery(searchQuery);\n})\n\n\n"],"names":["getImage","image","API_KEY","BASE_URL","searchParams","resp","createMarcupGallery","images","element","form","gallery","loader","showLoader","hideLoader","lightbox","SimpleLightbox","showMessageError","iziToast","showGallery","searchQuery","data","arrayImages","error","event"],"mappings":"6vBAEA,SAASA,EAASC,EAAO,CACrB,MAAMC,EAAU,qCACVC,EAAW,2BACXC,EAAe,IAAI,gBAAgB,CACzC,IAAKF,EACL,EAAGD,EACH,WAAY,QACZ,YAAa,aACb,WAAY,MAChB,CAAK,EACD,eAAQ,IAAIG,EAAa,SAAU,CAAA,EAC5B,MAAM,GAAGD,CAAQ,IAAIC,CAAY,EAAE,EACrC,KAAMC,GAAS,CAChB,GAAI,CAACA,EAAK,GACN,MAAM,IAAI,MAAMA,EAAK,UAAU,EAE/B,OAAOA,EAAK,MACxB,CAAS,CAET,CCjBA,SAASC,EAAoBC,EAAQ,CACnC,OAAOA,EAAO,IAAKC,GACb;AAAA;AAAA,4CAEoCA,EAAQ,aAAa;AAAA,kDACfA,EAAQ,YAAY,UAAUA,EAAQ,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDAM1CA,EAAQ,KAAK;AAAA;AAAA;AAAA;AAAA,kDAIbA,EAAQ,KAAK;AAAA;AAAA;AAAA;AAAA,kDAIbA,EAAQ,QAAQ;AAAA;AAAA;AAAA;AAAA,kDAIhBA,EAAQ,SAAS;AAAA;AAAA;AAAA,cAGrD,EAAE,KAAK,EAAE,CACvB,CCtBA,MAAMC,EAAO,SAAS,cAAc,OAAO,EACrCC,EAAU,SAAS,cAAc,UAAU,EAC3CC,EAAS,SAAS,cAAc,SAAS,EAE/C,SAASC,GAAa,CACrBD,EAAO,UAAU,OAAO,QAAQ,CACjC,CACA,SAASE,GAAa,CACpBF,EAAO,UAAU,IAAI,QAAQ,CAC/B,CACA,MAAMG,EAAW,IAAIC,EAAe,aAChC,CACI,aAAc,MACd,aAAc,GACtB,CAAK,EAEL,SAASC,GAAmB,CACxBC,EAAS,MAAM,CACX,QAAS,2EACT,SAAU,QACV,SAAU,WACV,YAAa,GACb,gBAAiB,UACjB,WAAY,UACZ,aAAc,UACd,MAAO,MACf,CAAK,CACL,CAEA,SAASC,EAAYC,EAAa,CAC1BA,IACDP,EAAY,EACZH,EAAK,MAAK,EACVC,EAAQ,UAAY,GAEnBV,EAASmB,CAAW,EACf,KAAKC,GAAQ,CACV,MAAMC,EAAcD,EAAK,KACrBC,EAAY,QACZX,EAAQ,UAAYJ,EAAoBe,CAAW,EACnDP,EAAS,QAAO,GAEhBE,GAEpB,CAAa,EACA,MAAOM,GAAU,QAAQ,IAAIA,CAAK,CAAC,EAEpC,QAAQ,IAAMT,EAAU,CAAE,EAEtC,CAEAJ,EAAK,iBAAiB,SAAUc,GAAS,CACrCA,EAAM,eAAc,EACpB,MAAMJ,EAAcI,EAAM,OAAO,SAAS,OAAO,MACjDL,EAAYC,CAAW,CAC3B,CAAC"}